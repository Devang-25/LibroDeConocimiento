#include <Challenges/ProjectEuler/EvenFibonacciNumbers.hpp>

#include <Common/Logger.hpp>
#include <Common/UserInputHandler.hpp>

namespace src::challenges::euler
{
namespace
{

common::Logger logger("EvenFibonacciNumbers");

long evenFibonacciNumbers(long number)
{
    long result = 0;
    long prevNum = 0;
    long nextNum = 1;

    while (nextNum < number)
    {
        if (nextNum % 2 == 0)
        {
            result = result + nextNum;
        }
        nextNum = nextNum + prevNum;
        prevNum = nextNum - prevNum;
    }

    return result;
}

} // namespace

const std::string EvenFibonacciNumbers::CHALLENGE_NAME_ = "EvenFibonacciNumbers";

EvenFibonacciNumbers::EvenFibonacciNumbers()
{
}

std::string EvenFibonacciNumbers::name() const
{
    return CHALLENGE_NAME_;
}

common::Result EvenFibonacciNumbers::run(std::istream& inputStream)
{
    displayProblem();
    auto input = common::getUserInputIntegralOrFloating<long>(inputStream);
    auto result = evenFibonacciNumbers(input);
    logger.print(result);

    result_.set(result);
    return result_;
}

void EvenFibonacciNumbers::displayProblem() const
{
    logger.print("Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:");
    logger.print("1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...");
    logger.print("By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.");
}

} // namespace src::challenges::euler
