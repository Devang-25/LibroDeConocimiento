HuffmanCoding
1. Add node solution

LibroDeConocimiento
1. In ChessboardTraveling challenge during traversal of paths from one square to another, apply dynamic programming
   Add unordered_set[11,12,22,32,42,43] and just search all with subset of it if is present already
   If it is present, store it for now as a terminated path since somebody is already traversing it
   In the end, all that reached the goal should be searched of all that has been stored, add 1 for each
   Goal is so that no need to redo searching the same path
2. Change Common/File into Common/UserInput and move there UserInputHandler.hpp but with new name BuiltinDataTypeInput.hpp
   Move matrix related logic from FileHandler.hpp (and cpp) to its own file
   Add parseInput to a common file and use across all files using it
3. Design files that will make it easy to have input lets say for QueensAttack.cpp

MessageEncryption
1. Add new encrypt version, for example [ a 2 14 17 ] [ g 3 ] | [ q 1 4 ]
   But replace those letters (a, g, q in this example) based on index in keycode or in ASCII.
   Put a separator to indicate between letters present in keycode and those that are not.

Others
1. Develop projects with Python, SQL, Multithreading, different Algorithms, different Design Patterns
2. Create a new repository that will hold all small tools and scripts.
   First script: Parse learnings.txt and get the line numbers of the main topics (those that are not indented)
